# Generated by the protocol buffer compiler.  DO NOT EDIT!

from six import with_metaclass

from google.protobuf import descriptor
from google.protobuf import descriptor_pb2
from google.protobuf import message
from google.protobuf import reflection
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
    name='proto/reg_code.proto',
    package='',
    serialized_pb='\n\x14proto/reg_code.proto\"E\n\x07\x43ontent\x12\x0c\n\x04\x63ode\x18\x01'
    ' \x02(\x0c\x12\x1c\n\tcode_type\x18\x02 '
    '\x02(\x0e\x32\t.CodeType\x12\x0e\n\x06\x64\x65vice\x18\x03 '
    '\x01(\t\"6\n\x07RegCode\x12\x19\n\x07\x63ontent\x18\x01 '
    '\x02(\x0b\x32\x08.Content\x12\x10\n\x08\x63hecksum\x18\x02 '
    '\x02(\x03*>\n\x08\x43odeType\x12\x0e\n\nGROUP_CODE\x10\x00\x12\x0f\n\x0bUNIQUE_CODE\x10\x01\x12\x11\n\rONE_TIME_CODE\x10\x02')

_CODETYPE = descriptor.EnumDescriptor(
    name='CodeType',
    full_name='CodeType',
    filename=None,
    file=DESCRIPTOR,
    values=[
        descriptor.EnumValueDescriptor(
            name='GROUP_CODE', index=0, number=0,
            options=None,
            type=None),
        descriptor.EnumValueDescriptor(
            name='UNIQUE_CODE', index=1, number=1,
            options=None,
            type=None),
        descriptor.EnumValueDescriptor(
            name='ONE_TIME_CODE', index=2, number=2,
            options=None,
            type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=151,
    serialized_end=213,
)


GROUP_CODE = 0
UNIQUE_CODE = 1
ONE_TIME_CODE = 2


_CONTENT = descriptor.Descriptor(
    name='Content',
    full_name='Content',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        descriptor.FieldDescriptor(
            name='code', full_name='Content.code', index=0,
            number=1, type=12, cpp_type=9, label=2,
            has_default_value=False, default_value='',
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        descriptor.FieldDescriptor(
            name='code_type', full_name='Content.code_type', index=1,
            number=2, type=14, cpp_type=8, label=2,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        descriptor.FieldDescriptor(
            name='device', full_name='Content.device', index=2,
            number=3, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=unicode('', 'utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
        ],
    nested_types=[],
    enum_types=[
        ],
    options=None,
    is_extendable=False,
    extension_ranges=[],
    serialized_start=24,
    serialized_end=93,
)


_REGCODE = descriptor.Descriptor(
    name='RegCode',
    full_name='RegCode',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        descriptor.FieldDescriptor(
            name='content', full_name='RegCode.content', index=0,
            number=1, type=11, cpp_type=10, label=2,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        descriptor.FieldDescriptor(
            name='checksum', full_name='RegCode.checksum', index=1,
            number=2, type=3, cpp_type=2, label=2,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
        ],
    nested_types=[],
    enum_types=[
        ],
    options=None,
    is_extendable=False,
    extension_ranges=[],
    serialized_start=95,
    serialized_end=149,
)


_CONTENT.fields_by_name['code_type'].enum_type = _CODETYPE
_REGCODE.fields_by_name['content'].message_type = _CONTENT


class Content(with_metaclass(reflection.GeneratedProtocolMessageType,
                             message.Message)):
  DESCRIPTOR = _CONTENT

  # @@protoc_insertion_point(class_scope:Content)


class RegCode(with_metaclass(reflection.GeneratedProtocolMessageType,
                             message.Message)):
  DESCRIPTOR = _REGCODE

  # @@protoc_insertion_point(class_scope:RegCode)

# @@protoc_insertion_point(module_scope)
